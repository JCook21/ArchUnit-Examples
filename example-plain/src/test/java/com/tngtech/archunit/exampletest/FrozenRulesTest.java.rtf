{\rtf1\ansi \deff1{\fonttbl{\f1\fmodern\fprq1\fcharset0 Courier New;}}{\colortbl;\red255\green255\blue255;\red50\green50\blue50;\red16\green148\blue160;\red16\green148\blue160;\red150\green150\blue150;\red150\green150\blue150;\red220\green104\blue22;\red105\green199\blue58;\red16\green148\blue160;\red150\green150\blue150;\red50\green50\blue50;\red115\green118\blue196;\red59\green106\blue200;\red160\green00\blue80;\red00\green161\blue80;\red199\green58\blue105;}
\paperw11905\paperh16837\margl1134\margr1134\margt1134\margb1134\sectd\plain\f1\fs20
\pard \cbpat1{{\cf2{}}{\cf13{package}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{exampletest}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import}} {\cf2{javax}}{\cf11{.}}{\cf2{persistence}}{\cf11{.}}{\cf2{EntityManager}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{ArchConfiguration}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{core}}{\cf11{.}}{\cf2{domain}}{\cf11{.}}{\cf2{JavaClasses}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{core}}{\cf11{.}}{\cf2{importer}}{\cf11{.}}{\cf2{ClassFileImporter}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{example}}{\cf11{.}}{\cf2{layers}}{\cf11{.}}{\cf2{ClassViolatingCodingRules}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{lang}}{\cf11{.}}{\cf2{syntax}}{\cf11{.}}{\cf2{elements}}{\cf11{.}}{\cf2{FieldsShouldConjunction}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{library}}{\cf11{.}}{\cf2{freeze}}{\cf11{.}}{\cf2{FreezingArchRule}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{library}}{\cf11{.}}{\cf2{freeze}}{\cf11{.}}{\cf2{ViolationLineMatcher}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{library}}{\cf11{.}}{\cf2{freeze}}{\cf11{.}}{\cf2{ViolationStore}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import}} {\cf2{org}}{\cf11{.}}{\cf2{junit}}{\cf11{.}}{\cf2{Test}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import static}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{lang}}{\cf11{.}}{\cf2{syntax}}{\cf11{.}}{\cf2{ArchRuleDefinition}}{\cf11{.}}{\cf2{fields}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import static}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{lang}}{\cf11{.}}{\cf2{syntax}}{\cf11{.}}{\cf2{ArchRuleDefinition}}{\cf11{.}}{\cf2{noClasses}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{import static}} {\cf2{com}}{\cf11{.}}{\cf2{tngtech}}{\cf11{.}}{\cf2{archunit}}{\cf11{.}}{\cf2{library}}{\cf11{.}}{\cf2{freeze}}{\cf11{.}}{\cf2{FreezingArchRule}}{\cf11{.}}{\cf2{freeze}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf6{/**}}}\par\pard
\cbpat1{{\cf6{ * This test demonstrates the use of \{@link FreezingArchRule\} with 'default' configuration.}}}\par\pard
\cbpat1{{\cf6{ * While both rules shown have numerous violations, most of those violations have been 'frozen', i.e. at some point in time all violations}}}\par\pard
\cbpat1{{\cf6{ * were recorded as accepted for the moment. Only violations added afterwards will be reported.<br>}}}\par\pard
\cbpat1{{\cf6{ * You can see how the default text based \{@link ViolationStore\} stores the results under \{@code src/test/resources/frozen\} configured}}}\par\pard
\cbpat1{{\cf6{ * via \{@value ArchConfiguration#ARCHUNIT_PROPERTIES_RESOURCE_NAME\}. You can also}}}\par\pard
\cbpat1{{\cf6{ * observe that if you fix an old violation, this store will automatically be adjusted to not allow any regression.<br>}}}\par\pard
\cbpat1{{\cf6{ * Furthermore you can observe how the default \{@link ViolationLineMatcher\} will ignore changes in line numbers of recorded violations,}}}\par\pard
\cbpat1{{\cf6{ * i.e. if you only change the line numbers of frozen violations, the test will still pass.}}}\par\pard
\cbpat1{{\cf6{ */}}{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf13{public class}} {\cf2{FrozenRulesTest}} {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}    {\cf13{private final}} {\cf2{JavaClasses classes}} {\cf11{=}} {\cf2{}}{\cf13{new}} {\cf2{}}{\cf16{ClassFileImporter}}{\cf2{}}{\cf11{().}}{\cf2{}}{\cf16{importPackagesOf}}{\cf2{}}{\cf11{(}}{\cf2{ClassViolatingCodingRules}}{\cf11{.}}{\cf2{}}{\cf13{class}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}    {\cf15{@Test}}}\par\pard
\cbpat1{{\cf2{}}    {\cf13{public void}} {\cf2{}}{\cf16{no_classes_should_depend_on_service}}{\cf2{}}{\cf11{() \{}}}\par\pard
\cbpat1{{\cf2{}}        {\cf16{freeze}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf16{noClasses}}{\cf2{}}{\cf11{().}}{\cf2{}}{\cf16{should}}{\cf2{}}{\cf11{().}}{\cf2{}}{\cf16{dependOnClassesThat}}{\cf2{}}{\cf11{().}}{\cf2{}}{\cf16{resideInAPackage}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf3{"..service.."}}{\cf2{}}{\cf11{))}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{.}}{\cf2{}}{\cf16{check}}{\cf2{}}{\cf11{(}}{\cf2{classes}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}    {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}    {\cf15{@Test}}}\par\pard
\cbpat1{{\cf2{}}    {\cf13{public void}} {\cf2{}}{\cf16{no_classes_should_use_the_EntityManager}}{\cf2{}}{\cf11{() \{}}}\par\pard
\cbpat1{{\cf2{}}        {\cf16{freeze}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf16{noClasses}}{\cf2{}}{\cf11{().}}{\cf2{}}{\cf16{should}}{\cf2{}}{\cf11{().}}{\cf2{}}{\cf16{dependOnClassesThat}}{\cf2{}}{\cf11{().}}{\cf2{}}{\cf16{areAssignableTo}}{\cf2{}}{\cf11{(}}{\cf2{EntityManager}}{\cf11{.}}{\cf2{}}{\cf13{class}}{\cf2{}}{\cf11{))}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{.}}{\cf2{}}{\cf16{check}}{\cf2{}}{\cf11{(}}{\cf2{classes}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}    {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}    {\cf15{@Test}}}\par\pard
\cbpat1{{\cf2{}}    {\cf13{public void}} {\cf2{}}{\cf16{name}}{\cf2{}}{\cf11{() \{}}}\par\pard
\cbpat1{{\cf2{}}        {\cf13{var}} {\cf2{rule}} {\cf11{=}} {\cf2{}}{\cf16{fields}}{\cf2{}}{\cf11{().}}{\cf2{}}{\cf16{that}}{\cf2{}}{\cf11{().}}{\cf2{}}{\cf16{arePublic}}{\cf2{}}{\cf11{()}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{.}}{\cf2{}}{\cf16{and}}{\cf2{}}{\cf11{().}}{\cf2{}}{\cf16{areStatic}}{\cf2{}}{\cf11{()}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{.}}{\cf2{}}{\cf16{should}}{\cf2{}}{\cf11{().}}{\cf2{}}{\cf16{beFinal}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{        FreezingArchRule}}{\cf11{.}}{\cf2{}}{\cf16{freeze}}{\cf2{}}{\cf11{(}}{\cf2{rule}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}                {\cf11{.}}{\cf2{}}{\cf16{check}}{\cf2{}}{\cf11{(}}{\cf2{classes}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}    {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}{\cf2{}}}\par\pard
\cbpat1{}}
